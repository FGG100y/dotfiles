#---------------------
# Tmux's configuration
#---------------------
# -*-last modified-*- 2022-12-19 19:37:45

# # Setting the default prefix C-b to C-a ----------------- {{{
set -g prefix C-a
# # unbind the C-b
unbind C-b
# # ensure that we can send Ctrl-a to other apps (e.g., vim)
bind C-a send-prefix
# # autocomlete
#bind-key C-space run -b 'tmux-autocomplete'
## reload the .tmux.conf file with Prefix-r
bind r source-file ~/.tmux.conf \; display "tmuxconf reloaded!"
# # https://www.seanh.cc/2021/01/02/change-between-light-and-dark-themes-in-tmux/
bind T run-shell ~/.tmux/bin/toggle-theme
# # swap panes
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
# # setting the delay between prefix and command
set -s escape-time 1
# # Always turn-off the mouse Which will slow you down.
set -g mouse off
# # vim mode
set -g status-keys vi
setw -g mode-keys vi
# # git-gutter requires focus events on
set -g focus-events on
# # Set the default terminal node to 256color mode
#set -g default-terminal "screen-256color"
set -g status-interval 60

set -g status-left-length 50
set-option -g status-left "\
#[fg=colour7, bg=colour241]#{?client_prefix,#[bg=colour167],} 📚 #S "

#[fg=colour7, bg=colour241]#{?client_prefix,#[bg=colour167],} ❐ #S \
#[fg=colour241, bg=colour237]#{?client_prefix,#[fg=colour167],}#{?window_zoomed_flag, 🔍,}"

set -g status-right-length 150
set-option -g status-right "\
#[fg=colour246, bg=colour237] #(hostname -I | cut -d ' ' -f1) ⫷ \
#[fg=colour246, bg=colour237] %a %m-%d '%y\
#[fg=colour214, bg=colour237] %H:%M \
"
#[fg=colour109]  %H:%M \

# WEATHER='#(curl -s wttr.in/Guangzhou\?format\=1)'
# set -g status-right "#[fg=k]%a %F, %R $WEATHER"
# # }}}

setw -g status-position top

# # Splitting Panes ------------ {{{
# # splitting panes -hb,-vb (vim-split style) or just -h,-v
bind | split-window -hb -c "#{pane_current_path}"
bind - split-window -vb -c "#{pane_current_path}"
# # }}}

# # Resizing Panes ------- {{{
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# # }}}

# # copy && system clipboard group ------- {{{
# # Thu 11 Apr 2019 22:54:44 Update: xclip
# # copy current buffer to system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# # paste text from the system clipboard to tmux session
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\";tmux paste-buffer"
# # }}}

# # The tmux <<>> vim jumpping group ----------------------------------------------------------------- {{{
# # 日 06 11月 2022 22:10:58 | last update
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
        "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
            "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
# # Mon 07 Feb 2022 22:26:44 | Update
# # integrating seamlessly with Vim, using this snip and disable the plugin setting
#is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    #| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
#bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
#bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
#bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
#bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
#bind-key -T copy-mode-vi C-h select-pane -L
#bind-key -T copy-mode-vi C-j select-pane -D
#bind-key -T copy-mode-vi C-k select-pane -U
#bind-key -T copy-mode-vi C-l select-pane -R
## bind-key -T copy-mode-vi C-\ select-pane -l
## # additional customization 
#bind C-l send-keys 'C-l'
# # }}}

# # The tpm group ----------------------------------------------------------------- {{{
# # tpm is a tmux-plugin manager.
# # Quick Ref:
# # Installing plugins:
# #     1. add new plugin to .tmux.conf with `set -g @plugin ...`
# #     2. press `prefix + I` (capital i, as Install) to fetch the plugin.
# # See details in [github repos](github.com/tmux-plugins/tpm)
set -g @plugin 'tmux-plugins/tpm'
# # tmux-resurect:Persist tmux environment across system restarts
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'

# # tmux-resurect:Persist tmux environment across system restarts
#set -g @resurrect-capture-pane-contents 'on'
# # tmux-resurrect: restoring vim and neovim sessions when there is some-session.vim
# # for vim, use :Obsess to store the vim session first, then tmux will be able to restore it
set -g @resurrect-strategy-vim 'session'
set -g @continuum-restore 'on'
# terminal window will go fullscreen
#set -g @continuum-boot-options 'fullscreen'

# # put this 'run' command to the very end of .tmux.conf, says tpm's markdown file
run '~/.tmux/plugins/tpm/tpm'
# # }}}
