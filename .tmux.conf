#---------------------
# Tmux's configuration
#---------------------

# Fri 28 Jan 2022 12:10:12
# git-gutter requires focus events on
set -g focus-events on

# 2018-12-22 First Update | Version-0.01
# vim mode
set -g status-keys vi
setw -g mode-keys vi

# Always turn-off the mouse Which will slow you down.
set -g mouse off

# Set the default terminal node to 256color mode
set -g default-terminal "screen-256color"

# Changing the Status Line Colors
set -g status-style fg=white,bold,bg=black
# # set the color of the window list
# setw -g window-status-style fg=colour240,bg=black
# set colors for the active window
setw -g window-status-current-style fg=white,bg=magenta

# # colors for pane borders, it's not so good
# setw -g pane-border-style fg=green,bg=black
# setw -g pane-active-border-style fg=green,bg=black
# # active pane normal, other shaded out
# setw -g window-style fg=colour240,bg=colour233
# # setw -g window-style fg=white,bg=black
# setw -g window-active-style fg=white,bg=black

# https://www.seanh.cc/2021/01/02/change-between-light-and-dark-themes-in-tmux/
# set -g status-style 'fg=#d0cfcc,bg=#171421'
# set -g window-status-current-style 'bg=default,reverse'
bind T run-shell ~/.tmux/bin/toggle-theme

# Setting the default prefix C-b to C-a
set -g prefix C-a
# unbind the C-b
unbind C-b
# ensure that we can send Ctrl-a to other apps (e.g., vim)
bind C-a send-prefix

# setting the delay between prefix and command
set -s escape-time 1

# Setting the Window and Panes Index
#---------------------
# set the base index for windows/panes to 1 instead of 0
# set -g base-index 1
# set -g pane-base-index 1

# shotcut keywords 
#---------------------
# reload the .tmux.conf file with Prefix-r
bind r source-file ~/.tmux.conf \; display "tmuxconf reloaded!"
# bind e new-window -n "~/.tmux.conf" "sh -c '\${EDITOR:-vim} ~/.tmux.conf && tmux source ~/.tmux.conf && tmux display \"~/.tmux.conf sourced\"'"

# Splitting Panes
# ---------------
# splitting panes with | and -
bind | split-window -h
bind - split-window -v

# Remapping Movement Keys
# -----------------------
# moving between panes with Prefix h,j,k,l (like Vim, like vim)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
# quick window selection
# bind -r C-h select-window -t :-
# bind -r C-l select-window -t :+
# NOTE: use original 'Prefix + n/p' instead

# Resizing Panes
# --------------
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Thu 11 Apr 2019 22:54:44 Update: xclip
# copy current buffer to system clipboard
# bind -T vim-copy 'y' copy-selection
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# paste text from the system clipboard to tmux session
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\";tmux paste-buffer"

# # NOTE already set by vim-Tmuxline plugin, Sat 18 Jan 2020 20:23:23
# set -g status-left-length 50
# # center the window list in the status line
# set -g status-justify centre
# status line left side
# set -g status-left "#[fg=green][#S] #[fg=yellow]W:#I #[fg=cyan](#P)"
# status line right side: 19 Mar 20:57
# set -g status-right "#[fg=cyan]%a %d %b, %R | #(whoami)@#H"
# tmux_conf_theme_status_right='#{prefix}#{pairing}#{synchronized} %R , %d %b | #{username}#{root} | #{hostname} '

# Sat 30 Mar 2019 18:06:24 Update | Version-0.02
# iNTegrating seamlessly with Vim, using this snip and disable the plugin setting
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
# bind-key -T copy-mode-vi C-\ select-pane -l
bind C-l send-keys 'C-l'
# NOTE: Ctrl-l is the keybinding used by the readline library in many shells
# for clearing the screen. The last line above of this conf sets up Prefix
# Ctrl-l to issue that command istead.

# tpm is a tmux-plugin manager.  [see details in github repos]
# tmux-resurect:Persist tmux environment across system restarts
# vim-tmux-navigator: Seamless navigation between tmux panes and vim splits
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'xamut/tmux-weather'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# put this 'run' command to the very end of .tmux.conf, says tpm's markdown file
# run '~/.tmux/plugins/tpm/tpm/tpm'

# tmux-resurect:Persist tmux environment across system restarts
set -g @resurrect-capture-pane-contents 'on'
# tmux-resurrect: restoring vim and neovim sessions when there is some-session.vim
# for vim, use :Obsess to store the vim session first,
# and then tmux will be able to restore it 
set -g @resurrect-strategy-vim 'session'
set -g @continuum-restore 'on'
# using Tmuxline created file
if-shell "test -f ~/.vim/colors/tx-airline" "source ~/.vim/colors/tx-airline"
# weather display | overwrite the tmuxline.vim set for status-right | Sun 02 Jan 2022 12:02:49
set-option -g status-right "#{weather} | %R %a %F | #H"
# coustomize tmux-weather
set-option -g @tmux-weather-interval 15
set-option -g @tmux-weather-location "Guangzhou"
# set-option -g @tmux-weather-location "23.1387267,113.319321"

# put this 'run' command to the very end of .tmux.conf, says tpm's markdown file
run '~/.tmux/plugins/tpm/tpm'
