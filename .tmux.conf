#---------------------
# Tmux's configuration
#---------------------
# -*-last modified-*- Sat 23 Jul 2022 12:07:49

# shotcut keywords 
#-----------------

# # Setting the default prefix C-b to C-a ----------------- {{{
set -g prefix C-a
# # unbind the C-b
unbind C-b
# # ensure that we can send Ctrl-a to other apps (e.g., vim)
bind C-a send-prefix
# # setting the delay between prefix and command
set -s escape-time 1
# # }}}

# reload the .tmux.conf file with Prefix-r
bind r source-file ~/.tmux.conf \; display "tmuxconf reloaded!"
# https://www.seanh.cc/2021/01/02/change-between-light-and-dark-themes-in-tmux/
bind T run-shell ~/.tmux/bin/toggle-theme

# # vim mode && colortheme settings -------- {{{
# # git-gutter requires focus events on
set -g focus-events on
# # vim mode
set -g status-keys vi
setw -g mode-keys vi
# # Always turn-off the mouse Which will slow you down.
set -g mouse off
# # Set the default terminal node to 256color mode
set -g default-terminal "screen-256color"
# # Changing the Status Line Colors
set -g status-style fg=white,bold,bg=black
# # set the color of the window list
# setw -g window-status-style fg=colour240,bg=black
# # set colors for the active window
setw -g window-status-current-style fg=white,bg=magenta
# border colours
set -g pane-border-style fg=green
set -g pane-active-border-style "bg=default fg=magenta"

# # window-style: set to default
# setw -g window-style 'fg=default,bg=default'
# setw -g window-active-style 'fg=default,bg=default'
# # }}}

# Setting the Window and Panes Index ------------------- {{{
# set the base index for windows/panes to 1 instead of 0
# set -g base-index 1
# set -g pane-base-index 1
# # }}}

# # Splitting Panes ------------ {{{
# # splitting panes with current working path
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
# # }}}

# # Swap Panes ------------ {{{
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
# # }}}

# # Remapping Movement Keys (backup method) --------------------- {{{
# # moving between panes with Prefix + h,j,k,l (like Vim, like vim)
# bind h select-pane -L
# bind j select-pane -D
# bind k select-pane -U
# bind l select-pane -R
# # }}}

# # Resizing Panes ------- {{{
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5
# # }}}

# # copy && system clipboard group ------- {{{
# # Thu 11 Apr 2019 22:54:44 Update: xclip
# # copy current buffer to system clipboard
bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel 'xclip -in -selection clipboard'
# # paste text from the system clipboard to tmux session
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\";tmux paste-buffer"
# # }}}

# # vim-tmuxline backup group --------------------------------------- {{{
# # NOTE already set by vim-Tmuxline plugin, Sat 18 Jan 2020 20:23:23
# set -g status-left-length 50
# # center the window list in the status line
# set -g status-justify centre
# status line left side
# set -g status-left "#[fg=green][#S] #[fg=yellow]W:#I #[fg=cyan](#P)"
# status line right side: 19 Mar 20:57
# set -g status-right "#[fg=cyan]%a %d %b, %R | #(whoami)@#H"
# tmux_conf_theme_status_right='#{prefix}#{pairing}#{synchronized} %R , %d %b | #{username}#{root} | #{hostname} '
# # }}}


# # The tpm group ----------------------------------------------------------------- {{{
# # tpm is a tmux-plugin manager.  [see details in github repos]
set -g @plugin 'tmux-plugins/tpm'
# # tmux-resurect:Persist tmux environment across system restarts
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
# # vim-tmux-navigator: Seamless navigation between tmux panes and vim splits
set -g @plugin 'christoomey/vim-tmux-navigator'

# # tmux-resurect:Persist tmux environment across system restarts
set -g @resurrect-capture-pane-contents 'on'
# # tmux-resurrect: restoring vim and neovim sessions when there is some-session.vim
# # for vim, use :Obsess to store the vim session first, then tmux will be able to restore it
set -g @resurrect-strategy-vim 'session'
# terminal window will go fullscreen
set -g @continuum-restore 'on'
set -g @continuum-boot-options 'fullscreen'
# # using Tmuxline created file | vim plugin
if-shell "test -f ~/.vim/colors/tx-airline" "source ~/.vim/colors/tx-airline"
# # weather display | overwrite the tmuxline.vim set for status-right | Sun 02 Jan 2022 12:02:49
# # scripts directly from wttr.in 'one-line-output' section: (Sat 09 Jul 2022 12:38:06)
set -g status-interval 30
WEATHER='#(curl -s wttr.in/Guangzhou\?format\="%%l:+%%c%%10%%t&period=30")'
# set -g status-right "$WEATHER ..."
set-option -g status-right "$WEATHER | %R %a %F | #H"

# # put this 'run' command to the very end of .tmux.conf, says tpm's markdown file
run '~/.tmux/plugins/tpm/tpm'
# # }}}
